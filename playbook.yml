---
- name: Check Telnet and curl connectivity for RedHat, AIX, and Windows hosts
  hosts: all  # Run on all hosts in the inventory
  gather_facts: yes  # Gather facts to identify the OS
  vars:
    target_host: "nexus-dso.techcombank.com.vn"  # Target for the checks
    results: []  # Initialize an empty list to collect results

  tasks:
    - name: Check if the host is RedHat or AIX
      debug:
        msg: "Host {{ inventory_hostname }} is RedHat or AIX."
      when: ansible_facts['os_family'] in ['RedHat', 'AIX']

    - name: Check if the host is Windows
      debug:
        msg: "Host {{ inventory_hostname }} is Windows."
      when: ansible_facts['os_family'] == "Windows"

    - name: Check Telnet connectivity (RedHat/AIX)
      shell: "telnet {{ target_host }} 80 | head -n 1"
      register: telnet_result
      ignore_errors: yes
      when: ansible_facts['os_family'] in ['RedHat', 'AIX']

    - name: Check curl connectivity (RedHat/AIX)
      shell: "curl -I {{ target_host }} | head -n 1"
      register: curl_result
      ignore_errors: yes
      when: ansible_facts['os_family'] in ['RedHat', 'AIX']

    - name: Check Telnet connectivity (Windows)
      win_shell: "Test-NetConnection -ComputerName {{ target_host }} -Port 80"
      register: telnet_result
      ignore_errors: yes
      when: ansible_facts['os_family'] == "Windows"

    - name: Check curl connectivity (Windows)
      win_shell: "curl -I {{ target_host }}"
      register: curl_result
      ignore_errors: yes
      when: ansible_facts['os_family'] == "Windows"

    - name: Set telnet status
      set_fact:
        telnet_status: "{{ 'Success' if telnet_result.rc == 0 else 'Fail' }}"

    - name: Set curl status
      set_fact:
        curl_status: "{{ 'Success' if curl_result.rc == 0 else 'Fail' }}"

    - name: Collect result for each host
      set_fact:
        results: "{{ results + [{'host': inventory_hostname, 'os': ansible_facts['os_family'], 'telnet_status': telnet_status, 'curl_status': curl_status }] }}"

    - name: Display all results in one task (print to screen)
      debug:
        msg: "{{ results | map(attribute='host') | map('join', ', ') | join(' | ') }}"
      when: inventory_hostname == groups['all'][0]  # Only run on one host to print all results at once

    - name: Save results to a file (optional)
      copy:
        content: "{{ results | to_yaml }}"
        dest: "/tmp/results_{{ lookup('pipe', 'date +%Y%m%d') }}.yaml"
      when: inventory_hostname == groups['all'][0]  # Save only from one host, after all have finished
