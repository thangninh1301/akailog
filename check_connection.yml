---
- name: Check nslookup and telnet for a specified domain
  hosts: all
  gather_facts: no
  vars:
    domain_name: "nexus.edtexco.com"
    failed_hosts: []
    successful_hosts: []

  tasks:
    - name: Determine if the system is Windows or Unix-based
      set_fact:
        is_windows: "{{ 'true' if ansible_connection == 'winrm' else 'false' }}"

    # For Unix/Linux/RHEL hosts
    - name: Perform nslookup on Unix/Linux/RHEL
      when: is_windows == 'false'
      shell: nslookup {{ domain_name }}
      register: nslookup_output
      ignore_errors: yes

    - name: Debug nslookup output to inspect structure
      debug:
        var: nslookup_output

    - name: Check if nslookup succeeded based on rc
      when: nslookup_output.rc is defined and nslookup_output.rc == 0
      debug:
        msg: "nslookup succeeded on host {{ ansible_host }}"

    - name: Check if nslookup failed based on rc
      when: nslookup_output.rc is defined and nslookup_output.rc != 0
      debug:
        msg: "nslookup failed on host {{ ansible_host }}"

    # For Windows hosts
    - name: Perform nslookup on Windows
      when: is_windows == 'true'
      win_shell: nslookup {{ domain_name }}
      register: nslookup_output
      ignore_errors: yes

    - name: Debug nslookup output on Windows to inspect structure
      debug:
        var: nslookup_output

    - name: Check if nslookup succeeded on Windows
      when: nslookup_output.stdout is defined and "'Name:' in nslookup_output.stdout"
      debug:
        msg: "nslookup succeeded on Windows host {{ ansible_host }}"

    - name: Check if nslookup failed on Windows
      when: nslookup_output.stdout is defined and "'Name:' not in nslookup_output.stdout"
      debug:
        msg: "nslookup failed on Windows host {{ ansible_host }}"

    # Log IPs of failed and successful hosts
    - name: Add host to the failed list if nslookup or telnet failed
      when: (nslookup_output.rc is defined and nslookup_output.rc != 0) or 
            (nslookup_output.stdout is defined and "'Name:' not in nslookup_output.stdout")
      set_fact:
        failed_hosts: "{{ failed_hosts + [ansible_host] }}"

    - name: Add host to the successful list if nslookup succeeded
      when: (nslookup_output.rc is defined and nslookup_output.rc == 0) or 
            (nslookup_output.stdout is defined and "'Name:' in nslookup_output.stdout")
      set_fact:
        successful_hosts: "{{ successful_hosts + [ansible_host] }}"

    - name: Output failed IPs that cannot connect
      when: failed_hosts | length > 0
      debug:
        msg: "Hosts that failed to connect: {{ failed_hosts }}"

    - name: Output successful IPs that can connect
      when: successful_hosts | length > 0
      debug:
        msg: "Hosts that successfully connected: {{ successful_hosts }}"
